	.file	"sizes.c"
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"Data Sizes"
.LC1:
	.string	"=========="
.LC2:
	.string	"char        : %ld\n"
.LC3:
	.string	"short       : %ld\n"
.LC4:
	.string	"int         : %ld\n"
.LC5:
	.string	"long        : %ld\n"
.LC6:
	.string	"long long   : %ld\n"
.LC7:
	.string	"float       : %ld\n"
.LC8:
	.string	"double      : %ld\n"
.LC9:
	.string	"long double : %ld\n"
.LC10:
	.string	"_Decimal32  : %ld\n"
.LC11:
	.string	"_Decimal64  : %ld\n"
.LC12:
	.string	"_Decimal128 : %ld\n"
.LC13:
	.string	"int8_t      : %ld\n"
.LC14:
	.string	"int16_t     : %ld\n"
.LC15:
	.string	"int32_t     : %ld\n"
.LC16:
	.string	"int64_t     : %ld\n"
.LC17:
	.string	"size_t      : %ld\n"
.LC18:
	.string	"pid_t       : %ld\n"
.LC19:
	.string	"void *      : %ld\n"
.LC20:
	.string	"char *      : %ld\n"
	.section	.text.startup,"ax",@progbits
	.p2align 4,,15
	.globl	main
	.type	main, @function
main:
.LFB39:
	.cfi_startproc
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	movl	$.LC0, %edi
	call	puts
	movl	$.LC1, %edi
	call	puts
	movl	$1, %edx
	movl	$.LC2, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$2, %edx
	movl	$.LC3, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$4, %edx
	movl	$.LC4, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$8, %edx
	movl	$.LC5, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$8, %edx
	movl	$.LC6, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$4, %edx
	movl	$.LC7, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$8, %edx
	movl	$.LC8, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$16, %edx
	movl	$.LC9, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$4, %edx
	movl	$.LC10, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$8, %edx
	movl	$.LC11, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$16, %edx
	movl	$.LC12, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$1, %edx
	movl	$.LC13, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$2, %edx
	movl	$.LC14, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$4, %edx
	movl	$.LC15, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$8, %edx
	movl	$.LC16, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	xorl	%eax, %eax
	movl	$8, %edx
	movl	$.LC17, %esi
	movl	$1, %edi
	call	__printf_chk
	movl	$4, %edx
	movl	$.LC18, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$8, %edx
	movl	$.LC19, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	movl	$8, %edx
	movl	$.LC20, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	xorl	%eax, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE39:
	.size	main, .-main
	.ident	"GCC: (Gentoo 4.7.3-r1 p1.5, pie-0.5.5) 4.7.3"
	.section	.note.GNU-stack,"",@progbits
